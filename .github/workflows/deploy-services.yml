name: Build, Push, and Deploy Services to EKS

on:
  push:
    branches:
      - main
    paths:
      - 'auth-service/**'
      - 'course-service/**'
      - 'user-service/**'
      - 'ai-assistant-service/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Images
        run: |
          if git diff --name-only HEAD~1 | grep "^auth-service/"; then
            docker build -t ${{ secrets.ECR_AUTH_REPO_URI }}:latest ./auth-service
            docker push ${{ secrets.ECR_AUTH_REPO_URI }}:latest
          fi

          if git diff --name-only HEAD~1 | grep "^course-service/"; then
            docker build -t ${{ secrets.ECR_COURSE_REPO_URI }}:latest ./course-service
            docker push ${{ secrets.ECR_COURSE_REPO_URI }}:latest
          fi

          if git diff --name-only HEAD~1 | grep "^user-service/"; then
            docker build -t ${{ secrets.ECR_USER_REPO_URI }}:latest ./user-service
            docker push ${{ secrets.ECR_USER_REPO_URI }}:latest
          fi

          if git diff --name-only HEAD~1 | grep "^ai-assistant-service/"; then
            docker build -t ${{ secrets.ECR_AI_REPO_URI }}:latest ./ai-assistant-service
            docker push ${{ secrets.ECR_AI_REPO_URI }}:latest
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy Updated Images to EKS
        run: |
          if git diff --name-only HEAD~1 | grep "^auth-service/"; then
            kubectl set image deployment/auth-service auth-service=${{ secrets.ECR_AUTH_REPO_URI }}:latest
            kubectl rollout status deployment/auth-service
          fi

          if git diff --name-only HEAD~1 | grep "^course-service/"; then
            kubectl set image deployment/course-service course-service=${{ secrets.ECR_COURSE_REPO_URI }}:latest
            kubectl rollout status deployment/course-service
          fi

          if git diff --name-only HEAD~1 | grep "^user-service/"; then
            kubectl set image deployment/user-service user-service=${{ secrets.ECR_USER_REPO_URI }}:latest
            kubectl rollout status deployment/user-service
          fi

          if git diff --name-only HEAD~1 | grep "^ai-assistant-service/"; then
            kubectl set image deployment/ai-assistant-service ai-assistant-service=${{ secrets.ECR_AI_REPO_URI }}:latest
            kubectl rollout status deployment/ai-assistant-service
          fi
